
/**

https://www.acwing.com/problem/content/854/

原理是维护一个cnt，当cnt的值大于所有节点的总数，说明存在负环。
*/

#include<iostream>
#include<cstring>
#include<algorithm>
#include<queue>

using namespace std;

const int N = 100010;

int ne[N],he[N],e[N],w[N],dist[N],cnt[N];
int idx,n,m;
bool st[N];
void add(int a,int b,int c) {
    e[idx] = b,w[idx] = c,ne[idx] = he[a],he[a] = idx ++;
}

int spfa() {
    queue<int> q;
    //可能1号节点到不了那个负环，所以将嗲全部加入到队列中。
    for (int i = 1 ; i<= n ; i ++) {
        q.push(i);
        st[i] = true;
    }
    while(q.size()) {
        int t = q.front();
        q.pop();
        st[t] = false;
        
        for (int i = he[t]; i != -1; i = ne[i]) {
            int j = e[i];
            if (dist[j] > dist[t] + w[i]) {
                dist[j] = dist[t] + w[i];
                cnt[j] = cnt[t] + 1;
                //因为j更性了最短路如果j没有加进去j
                if (cnt[j] >= n) return true;
                if (!st[j]) {
                    q.push(j);
                    st[j] = true;
                }
            }
        }
    }
    
    return false;
}

int main () {
    cin >> n >> m;
    memset(he,-1,sizeof he);
    while (m --) {
        int a,b,c;
        scanf("%d%d%d",&a,&b,&c);
        add(a,b,c);
    }
    
    if (spfa()) puts("Yes");
    else puts("No");
    
    return 0;
}
