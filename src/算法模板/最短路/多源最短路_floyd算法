//https://www.acwing.com/problem/content/856/

#include<iostream>
#include<cstring>
#include <algorithm>

using namespace std;
const int N = 210,INF = 0x3f3f3f3f;


int g[N][N];
int n,m,Q;

void floyd() {
    for (int k = 1 ; k <= n ; k ++) {
        for (int i = 1 ; i <= n ; i ++) {
            for (int j = 1 ; j <= n ; j ++)
                g[i][j] = min(g[i][j],g[i][k] + g[k][j]);
        }
    }
}

int main() {
    
    scanf("%d%d%d",&n,&m,&Q);
    for (int i = 1; i <= n; i ++ )
        for (int j = 1; j <= n; j ++ )
            if (i == j) g[i][j] = 0;
            else g[i][j] = INF;
    while (m --){
        int a,b,c;
        scanf("%d%d%d",&a,&b,&c);
        g[a][b] = min(g[a][b],c);
    }
    
    floyd();
    
    while (Q --) {
        int a,b;
        scanf("%d%d",&a,&b);
        if (g[a][b] > (INF / 2)) puts("impossible");
        else printf("%d\n",g[a][b]);
    }
    
    return 0;
}
